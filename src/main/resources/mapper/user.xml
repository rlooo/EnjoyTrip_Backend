<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.ssafy.enjoytrip.user.model.mapper.UserMapper">
	<resultMap type="userDto" id="user">
		<result column="user_id" property="userId" />
		<result column="user_name" property="userName" />
	</resultMap>

	<resultMap type="userDto" id="userAll" extends="user">
		<result column="user_pw" property="userPw" />
		<result column="user_age" property="userAge" />
		<result column="email" property="email" />
		<result column="join_date" property="joinDate" />
		<result column="is_manager" property="isManager" />
	</resultMap>

	<resultMap type="userDto" id="userImage" extends="userAll">
		<collection property="fileInfos" column="user_id" javaType="list" ofType="userFileInfoDto" select="fileInfoList" />
	</resultMap>

	<resultMap type="userFileInfoDto" id="file">
		<result column="save_folder" property="saveFolder" />
		<result column="original_file" property="originalFile" />
		<result column="save_file" property="saveFile" />
	</resultMap>

	<select id="idCheck" parameterType="String" resultType="int">
		select
		count(user_id)
		from user
		where user_id = #{userId}
	</select>

	<insert id="registUser" parameterType="userDto">
	
		insert into user
		(user_name, user_id, user_pw, user_age, email,
		join_date)
		values (#{userName}, #{userId}, #{userPw},#{userAge},
		#{email},now())
	</insert>
	
	<update id="modifyUser" parameterType="userDto">
		update user
		set user_name =
		#{userName}, user_pw = #{userPw}, user_age=#{userAge}, email=#{email}
		where user_id = #{userId}
	</update>

	<insert id="registerFile" parameterType="userDto">
		insert into user_img_file_info (user_id, save_folder, original_file, save_file)
		values
		<foreach collection="fileInfos" item="userFileInfoDto" separator=" , ">
			(#{userId}, #{userFileInfoDto.saveFolder}, #{userFileInfoDto.originalFile}, #{userFileInfoDto.saveFile})
		</foreach>
	</insert>

	<!-- <select id="loginMember" parameterType="map" resultMap="member"> select 
		user_id, user_name from members where user_id = #{userid} and user_password 
		= #{userpwd} </select> -->

	<select id="getUserList" resultMap="userAll">
		select
		user_id, user_name, user_pw, user_age, email, join_date, is_manager 
		from user
		order by
		join_date
	</select>

	<select id="getUser" parameterType="String" resultMap="userAll">
		select
		user_id, user_name, user_pw, user_age, email, join_date,  is_manager 
		from
		user
		where user_id = #{userId}
	</select>

	<select id="getUserInfo" parameterType="String" resultMap="userAll">
		select
		user_id, user_name, email, user_age, join_date
		from user
		where user_id = #{userId}
	</select>

	<update id="updateUser" parameterType="userDto">
		update user
		<trim prefix="set" suffixOverrides=",">
			<if test="userPw != null">user_pw = #{userPw},</if>
			<if test="userAge != null">user_age = #{userAge},</if>
			<if test="email!= null">email = #{email},</if>
			<if test="isManager!=null">is_manager=#{isManager},</if>
		</trim>
		where user_id = #{userId}
	</update>

	<delete id="deleteUser" parameterType="String">
		delete from user
		where
		user_id = #{userId}
	</delete>

	<delete id="deleteImg" parameterType="String">
		delete from user_img_file_info
		where
		user_id = #{userId}
	</delete>

	<select id="fileInfoList" resultMap="file">
		select save_folder, original_file, save_file
		from user_img_file_info
		where user_id = #{userId}
	</select>

	<select id="login" parameterType="userDto" resultMap="userAll">
		select user_name, user_id, email
		from user
		where user_id = #{userId} and user_pw = #{userPw}
	</select>

	<select id="getRefreshToken" parameterType="string" resultType="string">
		select token
		from user
		where user_id = #{userId}
	</select>

	<update id="saveRefreshToken" parameterType="map">
		update user
		set token = #{token}
		where user_id = #{userId}
	</update>

	<update id="deleteRefreshToken" parameterType="map">
		update user
		set token = #{token, jdbcType=VARCHAR}
		where user_id = #{userId}
	</update>
	
	<select id ="findPwByEmail" parameterType="String" resultType="String">
	select user_pw
	from user
	where email=#{email}
	</select>
</mapper>